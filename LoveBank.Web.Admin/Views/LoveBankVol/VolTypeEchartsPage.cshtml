@using LoveBank.MVC
@{
    Layout = null;
}
<!DOCTYPE html>
<head>
    <meta charset="utf-8">
    <title>ECharts</title>
</head>
<body>
    @*<input  type="button" onclick="refresh()" value="刷新"/>*@
    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div style=" float:right;  text-align:center;">
        <input type="hidden" name="DeptId" id="DeptId"  />
         <input type="text"     style="width: 260px; text-align: center; font-size:x-large; border-left: 0px; border-top: 0px; border-right: 0px; border-bottom: 1px; " id="CoverCommunity" name="DeptIdName"  />
        <div id="menuContent" class="menuContent" style="display:none; margin-left:0px; z-index:10000;width:260px;  position: absolute;">
            <ul id="ztree" class="ztree" style="margin-top:0; background-color:#edf3f7;  overflow:scroll; border:solid 1px #ccc;"></ul>
        </div>

    </div>
     
    <div id="main" style="height:600px;border:1px solid #e3e3e3;-webkit-box-shadow:inset 0 1px 1px rgba(0, 0, 0, 0.05);"></div>


    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    @Html.IncludeScript("~/Content/EasyUI/jquery.min.js")
    <!-- ECharts单文件引入 -->

    <script src="~/echarts/build/dist/echarts.js"></script>

    <script type="text/javascript">
   

        $(function () {

            $("#CoverCommunity").bind("change", function () {
                var deptid = $("#DeptId").val();
                getOption(deptid);
            });


            var option;
            var myChart;
            var echarts;
            var curTheme;
            var isReset = true;
            //setTimeout(loadInit, 10);
       
            loadInit();
            function loadInit() {
                require.config({
                    paths: {
                        echarts: '../echarts/example/www/js'
                    }
                });
                require(
                    [
                        'echarts',
                        'echarts/chart/pie'

                    ],
                    requireCallback
                );

                function requireCallback(ec, defaultTheme) {
                    curTheme = defaultTheme;
                    //myChart = ec.init(document.getElementById('main'));
                    echarts = ec;
                    getOption("");
                  
                     //myChart.setOption(option);
                }
            }
            function EchartssetOption() {
                if (myChart && myChart.dispose) {
                    myChart.dispose();
                }
                window.onresize = myChart.resize;
                myChart = echarts.init(document.getElementById('main'), curTheme);

                myChart.setOption(option, true);
                window.onresize = myChart.resize;

            }
        

            function getOption(id) {


                var url = '@Url.Action("VolTypeEchartsData")' + '?deptid=' + id + "&t=" + Date.parse(new Date());
                url = encodeURI(url);
                $.ajax({
                    url: url,
                    type: 'POST',
                    cache: false,
                    async: false,
                    dataType: "json",
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        // 通常情况下textStatus和errorThown只有其中一个有值 
                        alert("cuow " + XMLHttpRequest);
                    },
                    success: function (obj) {
                        //var obj = eval("(" + data + ")");
                    

                        var legendData = new Array();
                        for (var i in obj.VolTypeEchartsDataList) {
                            legendData.push(obj.VolTypeEchartsDataList[i].name);
                           
                        }
                        $("#CoverCommunity").val(obj.DepName);

                        option = {
                            title: {
                                text: '辖区志愿者统计(总数:' + obj.Total + ')',
                                subtext: obj.DepName,
                                x: 'center'
                            },
                            tooltip: {
                                trigger: 'item',
                                formatter: "{a} <br/>{b} : {c} ({d}%)"
                            },
                            legend: {
                                orient: 'vertical',
                                x: 'left',
                                data: legendData
                            },
                            toolbox: {
                                show: false,
                                feature: {
                                    mark: { show: true },
                                    dataView: { show: true, readOnly: false },
                                    magicType: {
                                        show: true,
                                        type: ['pie', 'funnel'],
                                        option: {
                                            funnel: {
                                                x: '25%',
                                                width: '50%',
                                                funnelAlign: 'left',
                                                max: 1548
                                            }
                                        }
                                    },
                                    restore: { show: true },
                                    saveAsImage: { show: true }
                                }
                            },
                            calculable: true,
                            series: [
                                {
                                    name: '志愿者类型',
                                    type: 'pie',
                                    radius: '75%',
                                    center: ['50%', '60%'],
                                    data: obj.VolTypeEchartsDataList
                                }
                            ]
                        };
                  
                       
                      
                        if (myChart && myChart.dispose) {
                            myChart.dispose();
                        }
                      
                        myChart = echarts.init(document.getElementById('main'), curTheme);
                        myChart.setOption(option);
                      
                    }
                });
             
                
            }

            //setInterval()
            setInterval(refresh, 1000 * 60 * 10);

            function refresh() {
               
                myChart.setOption(option);
            }
        });

   
    </script>
    @*@Html.IncludeScript("~/Content/EasyUI/jquery.min.js")*@
    @Html.IncludeScript("~/Content/JS/MachineModule/edit.js")
    @Html.IncludeCSS("~/Content/plug-in/ztree/css/zTreeStyle/zTreeStyle.css")
    @Html.IncludeScript("~/Content/plug-in/ztree/js/jquery.ztree.core-3.5.js")
    @Html.IncludeScript("~/Content/plug-in/ztree/js/jquery.ztree.excheck-3.5.js")
    <script type="text/javascript">

    var zNodes =@(Html.Raw(ViewData["Department_List"].ToString()))
    $("#CoverCommunity").TreeMvc({Department_List:zNodes});
    $("#CoverCommunity").change(function(){
        if (!$(this).val()||$(this).val()=="") {
            $("#DeptId").val("");
        }
    });
    </script>
</body>